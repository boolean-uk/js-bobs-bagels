
PART 2

User story
As a member of the public 
So that I can not overfill my small bagel basket
I'd like to know when my basket is full when I try adding an item beyond my basket capacity.

Domain Model:
* Method:  setUserBasketLimit(takestheItem, @object)   
* Input: Item - item(@object)
* Source: if (isbasketFull = 10  then we send a message output) if not , they can add successfully 
* Output: cant add more item ,  your basket is full if not yet full   basket + 1


User story
As a Bob's Bagels manager,
So that I can record more sales
Iâ€™d like to create baskets with larger capacity when I need to.

Domain Model:
* Method: setManagerLimit(anyLimitManagerWishToSet)
* Input: newCapacity (@integer) - the new capacity for the basket
* Source: Only accessible to the manager; allows the manager to modify the basket capacity.
* Output: None, but updates the basket capacity to the specified value.

User story 
As a member of the public
So that I can maintain my sanity
I'd like to know if I try to remove an item that doesn't exist in my basket. 

DOMAIN MODEL , 
I WILL LEVERAGE MY REMOVEITEM METHOD I DID IN PART 1 TO HAVE AN ELSE SATTEMENT TO TELL USER THEY CANT DELETE THE PARTICULAR ITEM BECAUSE IT DOESNT EXIST

